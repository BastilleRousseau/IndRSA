df.u <- as.data.frame(sweep(u[, choices], 2, d[choices]^obs.scale,
FUN = "*"))
v <- sweep(v, 2, d^var.scale, FUN = "*")
df.v <- as.data.frame(v[, choices])
names(df.u) <- c("xvar", "yvar")
names(df.v) <- names(df.u)
if (pc.biplot) {
df.u <- df.u * nobs.factor
}
r <- sqrt(qchisq(circle.prob, df = 2)) * prod(colMeans(df.u^2))^(1/4)
v.scale <- rowSums(v^2)
df.v <- r * df.v/sqrt(max(v.scale))
if (obs.scale == 0) {
u.axis.labs <- paste("standardized PC", choices, sep = "")
}
else {
u.axis.labs <- paste("PC", choices, sep = "")
}
u.axis.labs <- paste(u.axis.labs, sprintf("(%0.1f%% explained var.)",
100 * pcobj$sdev[choices]^2/sum(pcobj$sdev^2)))
if (!is.null(labels)) {
df.u$labels <- labels
}
if (!is.null(groups)) {
df.u$groups <- groups
}
if (varname.abbrev) {
df.v$varname <- abbreviate(rownames(v))
}
else {
df.v$varname <- rownames(v)
}
df.v$angle <- with(df.v, (180/pi) * atan(yvar/xvar))
df.v$hjust = with(df.v, (1 - varname.adjust * sign(xvar))/2)
g <- ggplot(data = df.u, aes(x = xvar, y = yvar)) + xlab(u.axis.labs[1]) +
ylab(u.axis.labs[2]) + coord_equal()
if (var.axes) {
if (circle) {
theta <- c(seq(-pi, pi, length = 50), seq(pi, -pi,
length = 50))
circle <- data.frame(xvar = r * cos(theta), yvar = r *
sin(theta))
g <- g + geom_path(data = circle, color = muted("white"),
size = 2, alpha = 1/3)
}
g <- g + geom_segment(data = df.v, aes(x = 0, y = 0,
xend = xvar, yend = yvar), arrow = arrow(length = unit(1/2,
"picas")), color = muted("red"))
}
if (!is.null(df.u$labels)) {
if (!is.null(df.u$groups)) {
g <- g + geom_text(aes(label = labels, color = groups),
size = labels.size)
}
else {
g <- g + geom_text(aes(label = labels), size = labels.size)
}
}
else {
if (!is.null(df.u$groups)) {
g <- g + geom_point(aes(color = groups), alpha = alpha)
}
else {
g <- g + geom_point(alpha = alpha)
}
}
if (!is.null(df.u$groups) && ellipse) {
theta <- c(seq(-pi, pi, length = 50), seq(pi, -pi, length = 50))
circle <- cbind(cos(theta), sin(theta))
ell <- ddply(df.u, "groups", function(x) {
if (nrow(x) <= 2) {
return(NULL)
}
sigma <- var(cbind(x$xvar, x$yvar))
mu <- c(mean(x$xvar), mean(x$yvar))
ed <- sqrt(qchisq(ellipse.prob, df = 2))
data.frame(sweep(circle %*% chol(sigma) * ed, 2,
mu, FUN = "+"), groups = x$groups[1])
})
names(ell)[1:2] <- c("xvar", "yvar")
#ell$value<-as.numeric(as.factor(ell$groups))
g <- g + geom_path(data = ell, aes(color = groups, group = groups), size=2) ### Polygon or geom_path
# g <- g + geom_polygon(data = ell, aes(fill=1.1, color = groups, group = groups), size=2) ### Polygon or geom_path
}
# if (var.axes) { ## Remove axis here
# g <- g + geom_text(data = df.v, aes(label = varname,
#                                    x = xvar, y = yvar, angle = angle, hjust = hjust),
#                    color = "darkred", size = varname.size)
#}
return(g)
}
g <- ggbiplot2(pca, obs.scale = 1, var.scale = 1,
groups = data[,40], ellipse = TRUE, ellipse.prob=0.95,
circle = FALSE, varname.size=4, alpha=0)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'vertical',
legend.justification = c(1,0),
legend.position = c(1,0),
legend.text=element_text(size=14))
g<-g+geom_point(data=dd,aes(PC1,PC2,shape=Species,fill=Species),size=3)+  scale_shape_manual(values=c(21,22,23))
g<-g+geom_point(data=ind,aes(PC1,PC2,shape=Species,fill=Species),size=7)
g<-g+ylim(-4, 3.5)
g<-g+xlim(-2.8, 6.5)
print(g)
g <- g + theme(legend.direction = 'vertical',
legend.justification = c(0,1),
legend.position = c(1,0),
legend.text=element_text(size=14))
g<-g+geom_point(data=dd,aes(PC1,PC2,shape=Species,fill=Species),size=3)+  scale_shape_manual(values=c(21,22,23))
g<-g+geom_point(data=ind,aes(PC1,PC2,shape=Species,fill=Species),size=7)
g<-g+geom_point(data=ind,aes(PC1,PC2,shape=Species,fill=Species),size=7)
g<-g+ylim(-3, 2)
g<-g+xlim(-3, 6)
print(g)
g <- ggbiplot2(pca, obs.scale = 1, var.scale = 1,
groups = data[,40], ellipse = TRUE, ellipse.prob=0.95,
circle = FALSE, varname.size=4, alpha=0)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'vertical',
legend.justification = c(1,0),
legend.position = c(1,0),
legend.text=element_text(size=14))
g<-g+geom_point(data=dd,aes(PC1,PC2,shape=Species,fill=Species),size=3)+  scale_shape_manual(values=c(21,22,23))
g<-g+geom_point(data=ind,aes(PC1,PC2,shape=Species,fill=Species),size=7)
g<-g+ylim(-3, 2)
g<-g+xlim(-3, 6)
print(g)
g <- g + theme(legend.direction = 'vertical',
legend.justification = c(1,0),
legend.position = c(1,1),
legend.text=element_text(size=14))
print(g)
g <- g + theme(legend.direction = 'vertical',
legend.justification = c(1,0),
legend.position = c(1,0),
legend.text=element_text(size=14))
g<-g+geom_point(data=dd,aes(PC1,PC2,shape=Species,fill=Species),size=3)+  scale_shape_manual(values=c(21,22,23))
g<-g+geom_point(data=ind,aes(PC1,PC2,shape=Species,fill=Species),size=7)
g<-g+ylim(-3, 2)
g<-g+xlim(-3, 6)
print(g)
g <- g + theme(legend.direction = 'horizontal',
legend.justification = c(1,0),
legend.position = c(1,0),
legend.text=element_text(size=14))
print(g)
pca
library(wildxing)
library(raster)
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/lst_seg_200m.Rdata")
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/lst_seg_200m_16.Rdata")
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/lst_seg_200m_16b.Rdata")
seg200<-avg_inds(seg200_ls)
seg20016<-avg_inds(seg200_ls16)
seg20016b<-avg_inds(seg200_ls16b)
pts<-read.csv("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/additional crossings.csv")
sp<-SpatialPoints(pts[,2:3], CRS("+init=epsg:32637"))
sp<-spTransform(sp, CRS("+init=epsg:32737"))
tt<-extent(sp)
tt2<-extent(seg200)
tt[3]<-tt2[3]
seg200<-crop(seg200, tt)
seg20016<-crop(seg20016, tt)
seg20016b<-crop(seg20016b, tt)
# Full data
test<-match_pts(seg200, sp) #Ignore warnings
seg<-as.data.frame(seg200)
seg$id<-0
seg$id[test]<-1
sub1<-seg[test,]
sub2<-seg[-test,]
t.test(sub2$pct_mean, sub1$pct_mean)
boxplot(seg$pct_mean~seg$id)
tt
tt[1]
tt2
plot(seg200)
tt[1]<-26800
tt[2]<-29300
seg200<-crop(seg200, tt)
seg20016<-crop(seg20016, tt)
seg20016b<-crop(seg20016b, tt)
plot(seg200)
tt
seg200
seg200<-avg_inds(seg200_ls)
seg20016<-avg_inds(seg200_ls16)
seg20016b<-avg_inds(seg200_ls16b)
sp<-SpatialPoints(pts[,2:3], CRS("+init=epsg:32637"))
sp<-spTransform(sp, CRS("+init=epsg:32737"))
tt<-extent(sp)
tt2<-extent(seg200)
tt[3]<-tt2[3]
tt[1]<-268000
tt[2]<-293000
seg200<-crop(seg200, tt)
seg20016<-crop(seg20016, tt)
seg20016b<-crop(seg20016b, tt)
plot(seg200)
seg200<-avg_inds(seg200_ls)
seg20016<-avg_inds(seg200_ls16)
seg20016b<-avg_inds(seg200_ls16b)
pts<-read.csv("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/additional crossings.csv")
sp<-SpatialPoints(pts[,2:3], CRS("+init=epsg:32637"))
sp<-spTransform(sp, CRS("+init=epsg:32737"))
tt<-extent(sp)
tt2<-extent(seg200)
tt[3]<-tt2[3]
tt[1]<-268000
tt[2]<-292000
seg200<-crop(seg200, tt)
seg20016<-crop(seg20016, tt)
seg20016b<-crop(seg20016b, tt)
# Full data
test<-match_pts(seg200, sp) #Ignore warnings
seg<-as.data.frame(seg200)
seg$id<-0
seg$id[test]<-1
sub1<-seg[test,]
sub2<-seg[-test,]
t.test(sub2$pct_mean, sub1$pct_mean)
boxplot(seg$pct_mean~seg$id)
# 1 year
test<-match_pts(seg20016, sp) #Ignore warnings
seg<-as.data.frame(seg20016)
seg$id<-0
seg$id[test]<-1
sub1<-seg[test,]
sub2<-seg[-test,]
t.test(sub2$pct_mean, sub1$pct_mean)
boxplot(seg$pct_mean~seg$id)
avnt<-data.frame(Treatment=c("G Distant", "G Effluent", "G North", "G South", "G West", "S Pond","S Yak River 1","G Distant", "G Effluent", "G North", "G South", "G West","S Effluent", "S Pond","S Rivulet","S Yak River 1", "G Effluent", "G North", "G South", "G West", "S Effluent","S Pond","S Rivulet","S Yak River 1", "G Effluent", "G North", "G South", "G West","S Effluent", "S Pond","S Rivulet","S Yak River 1","G Effluent", "G North", "G South", "G West","S Effluent", "S Pond","S Rivulet","S Yak River 1", "G Effluent", "G North", "G South",
"G West", "S Effluent","S Pond","S Rivulet","S Yak River 1", "G Effluent", "G North", "G South", "G West", "S Effluent","S Pond","S Rivulet","S Yak River 1","G Effluent", "G North", "G South", "G West", "S Effluent","S Pond","S Yak River 1",
"S Yak River 2","G Distant", "G Effluent", "G North", "G South", "G West", "S Effluent","S Pond","S Yak River 1","G Distant", "G Effluent", "G North", "G South", "G West", "S Pond","S Rivulet","S Yak River 1","G Distant", "G Effluent", "G North", "G South", "G West", "S Pond","S Rivulet","S Yak River 1","G Distant", "G Effluent", "G North", "G South", "G West", "S Pond","S Rivulet","S Yak River 1","G Distant", "G Effluent", "G North", "G South", "G West", "S Pond","S Rivulet","S Yak River 1","G Distant", "G Effluent", "G North", "G South", "G West", "S Pond","S Rivulet","S Yak River 1","G Distant", "G Effluent", "G North", "G South", "G West", "S Pond","S Rivulet","S Yak River 1","G Distant", "G Effluent", "G North", "G South", "G West", "S Effluent","S Pond","S Rivulet","S Yak River 1"), sep=" ")
avnt
library(wildxing)
?optim_corri
?optim_mclp
optim_mclp
library(raster)
library(wildxing)
#Open corridor
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/lst_rail_200m.Rdata")
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/lst_syst_200m.Rdata")
all<-avg_inds(rail200_ls)
syst<-avg_inds(syst200_ls)
#syst$pct_mean<-ifelse(syst$pct_mean>0.006, 0.006, syst$pct_mean)
#syst$pct_mean<-as.numeric(as.factor(syst$pct_mean))
#all$pct_mean<-as.numeric(as.factor(all$pct_mean))
#Open points already present
rivers <-rgdal::readOGR(dsn="C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing", layer="Crossing water")
projection(all)<-CRS(projection(rivers))
projection(syst)<-CRS(projection(rivers))
?match_pts
tt<-match_pts(all, rivers)
tt
data.frame(all)[tt,]
tt<-match_pts(syst, rivers)
data.frame(syst)[tt,]
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/scns4.Rdata")
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/scns3.Rdata")
pdf("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/optim.pdf", height=10, width=7)
par(mfrow=c(3,2), mar=c(2,2,2,2))
plot(all, col="green", main="", axes=F)
plot(scn[[1]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("A."), cex=1.5, bty="n")
plot(all, col="green", main="", axes=F)
plot(scn[[4]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("B."), cex=1.5, bty="n")
plot(all, col="green", main="", axes=F)
plot(scn[[2]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("C."), cex=1.5, bty="n")
text(368000, 10068200, "*3")
plot(all, col="green", main="", axes=F)
plot(scn[[5]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("D."), cex=1.5, bty="n")
text(369000, 10155000, "*2")
plot(all, col="green", main="", axes=F)
plot(scn[[3]][[2]], add=T, pch=3, col="blue")
plot(scn[[3]][[3]][3:4], col="red", pch=3, add=T, ps=3)
legend("topright", c("E."), cex=1.5, bty="n")
#text(368000, 10068200, "*2")
plot(all, col="green", main="", axes=F)
plot(scn[[6]][[2]], add=T, pch=3, col="blue")
plot(scn[[6]][[3]], col="red", pch=3, add=T, ps=3)
legend("topright", c("F."), cex=1.5, bty="n")
dev.off()
pdf("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/mclp.pdf", height=10, width=7)
par(mfrow=c(3,2), mar=c(2,2,2,2))
plot(all, col="green", main="", axes=F)
plot(scn1[[1]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("A."), cex=1.5, bty="n")
legend("left", c("% elephants=96"), cex=1, bty="n")
plot(all, col="green", main="", axes=F)
plot(scn1[[4]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("B."), cex=1.5, bty="n")
legend("left", c("% elephants=85"), cex=1, bty="n")
plot(all, col="green", main="", axes=F)
plot(scn1[[2]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("C."), cex=1.5, bty="n")
legend("left", c("% elephants=100"), cex=1, bty="n")
plot(all, col="green", main="", axes=F)
plot(scn1[[5]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("D."), cex=1.5, bty="n")
legend("left", c("% elephants=96"), cex=1, bty="n")
plot(all, col="green", main="", axes=F)
plot(scn1[[3]][[2]], add=T, pch=3, col="blue")
plot(scn1[[3]][[3]], col="red", pch=3, add=T, ps=3)
legend("topright", c("E."), cex=1.5, bty="n")
legend("left", c("% elephants=100"), cex=1, bty="n")
plot(all, col="green", main="", axes=F)
plot(scn1[[6]][[2]], add=T, pch=3, col="blue")
plot(scn1[[6]][[3]], col="red", pch=3, add=T, ps=3)
legend("topright", c("F."), cex=1.5, bty="n")
legend("left", c("% elephants=90"), cex=1, bty="n")
dev.off()
pdf("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/optim.pdf", height=10, width=7)
par(mfrow=c(3,2), mar=c(2,2,2,2))
plot(all, col="green", main="", axes=T, xaxt=F, yaxt=F)
plot(scn[[1]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("A."), cex=1.5, bty="n")
plot(all, col="green", main="", axes=T, xaxt=F, yaxt=F)
plot(scn[[4]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("B."), cex=1.5, bty="n")
plot(all, col="green", main="", axes=T, xaxt=F, yaxt=F)
plot(scn[[2]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("C."), cex=1.5, bty="n")
text(368000, 10068200, "*3")
plot(all, col="green", main="", axes=T, xaxt=F, yaxt=F)
plot(scn[[5]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("D."), cex=1.5, bty="n")
text(369000, 10155000, "*2")
plot(all, col="green", main="", axes=T, xaxt=F, yaxt=F)
plot(scn[[3]][[2]], add=T, pch=3, col="blue")
plot(scn[[3]][[3]][3:4], col="red", pch=3, add=T, ps=3)
legend("topright", c("E."), cex=1.5, bty="n")
#text(368000, 10068200, "*2")
plot(all, col="green", main="", axes=T, xaxt=F, yaxt=F)
plot(scn[[6]][[2]], add=T, pch=3, col="blue")
plot(scn[[6]][[3]], col="red", pch=3, add=T, ps=3)
legend("topright", c("F."), cex=1.5, bty="n")
dev.off()
xaxt
xaxis
pdf("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/optim.pdf", height=10, width=7)
par(mfrow=c(3,2), mar=c(2,2,2,2))
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[1]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("A."), cex=1.5, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[4]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("B."), cex=1.5, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[2]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("C."), cex=1.5, bty="n")
text(368000, 10068200, "*3")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[5]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("D."), cex=1.5, bty="n")
text(369000, 10155000, "*2")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[3]][[2]], add=T, pch=3, col="blue")
plot(scn[[3]][[3]][3:4], col="red", pch=3, add=T, ps=3)
legend("topright", c("E."), cex=1.5, bty="n")
#text(368000, 10068200, "*2")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[6]][[2]], add=T, pch=3, col="blue")
plot(scn[[6]][[3]], col="red", pch=3, add=T, ps=3)
legend("topright", c("F."), cex=1.5, bty="n")
dev.off()
pdf("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/mclp.pdf", height=10, width=7)
par(mfrow=c(3,2), mar=c(2,2,2,2))
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[1]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("A."), cex=1.5, bty="n")
legend("left", c("% elephants=96"), cex=1, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[4]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("B."), cex=1.5, bty="n")
legend("left", c("% elephants=85"), cex=1, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[2]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("C."), cex=1.5, bty="n")
legend("left", c("% elephants=100"), cex=1, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[5]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("D."), cex=1.5, bty="n")
legend("left", c("% elephants=96"), cex=1, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[3]][[2]], add=T, pch=3, col="blue")
plot(scn1[[3]][[3]], col="red", pch=3, add=T, ps=3)
legend("topright", c("E."), cex=1.5, bty="n")
legend("left", c("% elephants=100"), cex=1, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[6]][[2]], add=T, pch=3, col="blue")
plot(scn1[[6]][[3]], col="red", pch=3, add=T, ps=3)
legend("topright", c("F."), cex=1.5, bty="n")
legend("left", c("% elephants=90"), cex=1, bty="n")
dev.off()
?xaxt
?part
?par
l
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
pdf("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/mclp.pdf", height=10, width=7)
par(mfrow=c(3,2), mar=c(2,2,2,2))
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[1]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("A."), cex=1.5, bty="n")
legend("left", c("% elephants=96"), cex=1, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[4]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("B."), cex=1.5, bty="n")
legend("left", c("% elephants=85"), cex=1, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[2]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("C."), cex=1.5, bty="n")
legend("left", c("% elephants=100"), cex=1, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[5]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("D."), cex=1.5, bty="n")
legend("left", c("% elephants=96"), cex=1, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[3]][[2]], add=T, pch=3, col="blue")
plot(scn1[[3]][[3]], col="red", pch=3, add=T, ps=3)
legend("topright", c("E."), cex=1.5, bty="n")
legend("left", c("% elephants=100"), cex=1, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn1[[6]][[2]], add=T, pch=3, col="blue")
plot(scn1[[6]][[3]], col="red", pch=3, add=T, ps=3)
legend("topright", c("F."), cex=1.5, bty="n")
legend("left", c("% elephants=90"), cex=1, bty="n")
dev.off()
pdf("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/optim.pdf", height=10, width=7)
par(mfrow=c(3,2), mar=c(2,2,2,2))
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[1]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("A."), cex=1.5, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[4]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("B."), cex=1.5, bty="n")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[2]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("C."), cex=1.5, bty="n")
text(368000, 10068200, "*3")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[5]][[2]], col="blue", pch=3, add=T, ps=3)
legend("topright", c("D."), cex=1.5, bty="n")
text(369000, 10155000, "*2")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[3]][[2]], add=T, pch=3, col="blue")
plot(scn[[3]][[3]][3:4], col="red", pch=3, add=T, ps=3)
legend("topright", c("E."), cex=1.5, bty="n")
#text(368000, 10068200, "*2")
plot(all, col="green", main="", axes=T, xaxt="n", yaxt="n")
plot(scn[[6]][[2]], add=T, pch=3, col="blue")
plot(scn[[6]][[3]], col="red", pch=3, add=T, ps=3)
legend("topright", c("F."), cex=1.5, bty="n")
dev.off()
library(raster)
library(wildxing)
#Open corridor
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/lst_rail_200m.Rdata")
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/lst_syst_200m.Rdata")
all<-avg_inds(rail200_ls)
syst<-avg_inds(syst200_ls)
all
syst
writeOGR(avg_inds(syst200_ls), dsn="C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/Figshare", layer="Subsample",driver="ESRI Shapefile", overwrite_layer = T)
library(rgdal)
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/lst_rail_200m.Rdata")
load("C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/lst_syst_200m.Rdata")
all<-avg_inds(rail200_ls)
syst<-avg_inds(syst200_ls)
writeOGR(avg_inds(syst200_ls), dsn="C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/Figshare", layer="Subsample",driver="ESRI Shapefile", overwrite_layer = T)
writeOGR(avg_inds(rail200_ls), dsn="C:/Users/Guillaume/OneDrive/Elephant/Analysis/Crossing/Figshare", layer="Total sample",driver="ESRI Shapefile", overwrite_layer = T)
ls()
rail200_ls[[±]]
rail200_ls[[1]]
rail200_ls[[2]]
rail200_ls[[3]]
plot(all)
setwd("C:/Users/Guillaume/OneDrive/Elephant/Analysis/RSF")
load("coef_withHR.Rdata")
library(vegan)
?rda
names(coef2)
test<-rda(coef2[,3:19], coef2[,52:73])
plot(test)
?plot.cca
?plot.rda
class(test)
summary(test)
install.packages("devtools")
library("devtools")
devtools::install_github("klutometis/roxygen")
install.packages("Rcpp")
devtools::install_github("klutometis/roxygen")
library(Rcpp)
install.packages("Rcpp")
library(Rcpp)
about()
library(Rcpp)
devtools::install_github("klutometis/roxygen")
library(roxygen2)
setwd("C:/Users/Guillaume/OneDrive/Elephant/Analysis/RSF")
setwd("./IndRSA")
document()
pack <- "IndRSA"
path <- find.package(pack)
system(paste(shQuote(file.path(R.home("bin"), "R")),"CMD", "Rd2pdf", shQuote(path)))
system(paste(shQuote(file.path(R.home("bin"), "R")),"CMD", "Rd2pdf", shQuote(path)))
